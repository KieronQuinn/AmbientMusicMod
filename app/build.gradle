plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.protobuf'
    id 'com.google.android.gms.oss-licenses-plugin'
}

def tagName = '1.1.1'
def moduleVersionName = "1.1"
def moduleVersionCode = 11

def getLocalProperty(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        String prop = props[propName]
        if(prop != null){
            return prop
        }else{
            return ""
        }
    } else {
        return ""
    }
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.kieronquinn.app.ambientmusicmod"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 111
        versionName "1.1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "BUILD_MODULE_VERSION", "\"${moduleVersionName}\"")
        buildConfigField("int", "BUILD_MODULE_VERSION_CODE", "${moduleVersionCode}")
        buildConfigField("String", "TAG_NAME", "\"${tagName}\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "TEST_OUTPUT_CSV_DIR", "\"" + getLocalProperty("test.output.csv_dir").replace("\\", "\\\\") + "\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    //AndroidX
    implementation 'androidx.core:core-ktx:1.5.0-beta02'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //Protobuf
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'

    //Koin
    def koin_version= "3.0.1-beta-1"
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"

    //Xposed
    compileOnly 'de.robv.android.xposed:api:82'

    //Material
    implementation 'com.google.android.material:material:1.3.0'

    //Bottom Sheet dialogs
    implementation 'com.afollestad.material-dialogs:bottomsheets:3.3.0'

    //Lottie
    implementation 'com.airbnb.android:lottie:3.6.1'

    //Waveform
    implementation 'com.github.alxrm:audiowave-progressbar:0.9.2'

    //Fast scroll
    implementation 'com.simplecityapps:recyclerview-fastscroll:2.0.1'

    //Picasso for use inside Xposed
    implementation 'com.squareup.picasso:picasso:2.71828'

    //libsu for root
    def libsuVersion = '3.1.2'
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"

    //Insetter for compat status/nav bar insets
    implementation 'dev.chrisbanes.insetter:insetter:0.5.0'

    //Markdown support
    implementation "io.noties.markwon:core:4.6.2"

    //TextView link handling
    implementation 'me.saket:better-link-movement-method:2.2.0'

    //OSS Licences
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    //Retrofit & GSON for updates
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.json:json:20201115'
    testImplementation 'com.github.doyaaaaaken:kotlin-csv-jvm:0.15.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

sourceSets {
    main.java.srcDirs +=  "${protobuf.generatedFilesBaseDir}/main/javalite"
    main.java.srcDirs += "$projectDir/src/main/proto"
}

processResources {
    exclude('**/*.proto')
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}